nxt_unit_request_read(3)   Library Functions Manual   nxt_unit_request_read(3)

Name
       nxt_unit_request_read - read  content of a response in Unit app

Library
       NGINX Unit library (libunit, ‐lunit)

Synopsis
       #include <nxt_unit.h>

       ssize_t nxt_unit_request_read(nxt_unit_request_info_t *req,
                                     void dst[.size], size_t size);

Arguments
       req    Request object.

       dst    Buffer  where  the request message body will be written.  It’s a
              buffer of size bytes.

Description
       nxt_unit_request_read(3) copies the client request message body into  a
       buffer.

       This  function  does  not  read the header fields nor the request line,
       which are available in req->request.

Return value
       The number of bytes read on success, or -1 on error.

Errors
       Errors will be reported in the Unit debug log.

       NXT_UNIT_ERROR
              •  Failed to read content.

Examples
       Below is a request and response pair, and the source  code  to  produce
       it.  It implements an echo web application.

       See  nxt_unit_init(3)  for an example where the request_handler() func‐
       tion defined below is used.

   Request
       $ echo -e 'foo\nbar' | curl --data-binary @- localhost;
       foo
       bar

   C code
       #define _GNU_SOURCE
       #include <string.h>

       #include <nxt_unit.h>

       void
       request_handler(nxt_unit_request_info_t *req)
       {
           int             rc;
           ssize_t         res;
           nxt_unit_buf_t  *buf;

           rc = nxt_unit_response_init(req, 200, 1, strlen("Content-Type")
                                                    + strlen("text/plain"));
           if (rc != 0) {
               goto fail;
           }

           rc = nxt_unit_response_add_field(req, "Content-Type",
                                                 strlen("Content-Type"),
                                                 "text/plain",
                                                 strlen("text/plain"));
           if (rc != 0) {
               goto fail;
           }

           rc = nxt_unit_response_send(req);
           if (rc != 0) {
               goto fail;
           }

           while (req->content_length) {
               buf = nxt_unit_response_buf_alloc(req, req->content_length);
               if (buf == NULL) {
                   rc = NXT_UNIT_ERROR;
                   goto fail;
               }

               res = nxt_unit_request_read(req, buf->free,
                                           buf->end - buf->free);
               if (res == -1) {
                   goto fail;
               }

               buf->free += res;

               rc = nxt_unit_buf_send(buf);
               if (rc != 0) {
                   goto fail;
               }
           }

       fail:
           nxt_unit_request_done(req, rc);
       }

Copyright
       (C) 2017‐2023, NGINX, Inc.

       SPDX‐License‐Identifier: Apache‐2.0

See also
       nxt_unit_init(3), nxt_unit_response_init(3), unitd(8)

       Website ⟨https://unit.nginx.org⟩

       Mailing list ⟨https://mailman.nginx.org/mailman/listinfo/unit⟩

       GitHub ⟨https://github.com/nginx/unit⟩

NGINX Unit (unreleased)             (date)            nxt_unit_request_read(3)
